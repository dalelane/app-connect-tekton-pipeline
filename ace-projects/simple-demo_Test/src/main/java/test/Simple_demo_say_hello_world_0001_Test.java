package test;

import org.hamcrest.Matchers;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.Test;

import com.ibm.integration.test.v1.NodeSpy;
import com.ibm.integration.test.v1.SpyObjectReference;
import com.ibm.integration.test.v1.TestMessageAssembly;
import com.ibm.integration.test.v1.TestSetup;
import com.ibm.integration.test.v1.exception.TestException;

import static com.ibm.integration.test.v1.Matchers.*;
import static org.hamcrest.MatcherAssert.assertThat;
import static org.junit.jupiter.api.Assertions.assertEquals;

public class Simple_demo_say_hello_world_0001_Test {

	/*
	 * Simple_demo_say_hello_world_0001_Test Test generated by IBM App Connect
	 * Enterprise Toolkit 12.0.6.0 on Oct 26, 2022 8:45:58 AM
	 */

	@AfterEach
	public void cleanupTest() throws TestException {
		// Ensure any mocks created by a test are cleared after the test runs
		TestSetup.restoreAllMocks();
	}

	@Test
	public void simple_demo_say_hello_world_TestCase_001() throws TestException {

		// Define the SpyObjectReference
		SpyObjectReference nodeReference = new SpyObjectReference().application("simple-demo").messageFlow("say_hello")
				.node("world");

		// Initialise a NodeSpy
		NodeSpy nodeSpy = new NodeSpy(nodeReference);

		// Create a blank message assembly
		TestMessageAssembly inputMessageAssembly = new TestMessageAssembly();

		// Call the message flow node with the blank Message Assembly
		nodeSpy.evaluate(inputMessageAssembly, true, "in");

		/* Compare Output Message 1 at output terminal out */
		TestMessageAssembly actualMessageAssembly = nodeSpy.propagatedMessageAssembly("out", 1);

		// Make sure the JSON still exists
		assertEquals("world", actualMessageAssembly.messagePath("JSON.Data.hello").getStringValue());
	}

}
