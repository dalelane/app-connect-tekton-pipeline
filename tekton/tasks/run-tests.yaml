apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: ace-run-tests
spec:

  params:
    - name: bar-file-location
      description: location of the bar file to be tested

    - name: test-project-name
      description: name of the project containing the tests to run

  workspaces:
    - name: output
      description: workspace with the ACE resources in

  steps:
    - name: make-test-project-writable
      image: image-registry.openshift-image-registry.svc:5000/openshift/tools
      script: |
        #!/bin/bash

        set -e

        echo "making test project writable to allow compiling"
        chmod -R a+wrx "/workspace/output/ace-projects/$(params.test-project-name)"


    - name: run-tests
      # see https://www.ibm.com/docs/en/app-connect/12.0?topic=cacerid-building-sample-app-connect-enterprise-image-using-docker
      #  for alternate images and versions that can be used for this
      image: cp.icr.io/cp/appc/ace:12.0.6.0-r1@sha256:003ca6615312b0987fca1c09d676a77fc2c77ecc8607dfaa49f2e8e1976a6a15
      securityContext:
        # run as the aceuser user id
        runAsUser: 1001
        runAsGroup: 1001
        runAsNonRoot: false
      env:
        - name: LICENSE
          value: accept
      script: |
        #!/bin/bash

        set -e

        echo "setting up environment"
        source /opt/ibm/ace-12/server/bin/mqsiprofile

        echo "verifying bar output location"
        BAR_FOLDER="/workspace/output/bars"
        ls -l $BAR_FOLDER

        echo "confirming bar file location"
        BAR_FILE="$BAR_FOLDER/integration.bar"
        echo $BAR_FILE

        echo "deciding test bar file location"
        TEST_BAR_FILE="$BAR_FOLDER/integration-tests.bar"
        echo $TEST_BAR_FILE

        echo "confirming workspace location"
        ACE_PROJECTS_WORKSPACE="/workspace/output/ace-projects"
        ls -l $ACE_PROJECTS_WORKSPACE

        echo "confirming template for the test server to run"
        TEST_SERVER_TEMPLATE="$ACE_PROJECTS_WORKSPACE/TEST_SERVER"
        ls -l $TEST_SERVER_TEMPLATE

        echo "creating test server"
        TEST_SERVER=$(mktemp -d)
        cp -rf $TEST_SERVER_TEMPLATE/* $TEST_SERVER/.
        echo $TEST_SERVER
        ls -l $TEST_SERVER
        cd $TEST_SERVER

        echo "checking for required loopback plugins"
        [ -d "config/connectors/loopback" ] && npm install loopback-connector-postgresql --save

        echo "creating bar with tests to be run"
        ibmint package \
          --input-path $ACE_PROJECTS_WORKSPACE \
          --project $(params.test-project-name) \
          --output-bar-file $TEST_BAR_FILE

        echo "checking test bar"
        ls -l $TEST_BAR_FILE

        echo "installing bars into test server"
        mqsibar --working-directory $TEST_SERVER \
          --bar-file $BAR_FILE
        mqsibar --working-directory $TEST_SERVER \
          --bar-file $TEST_BAR_FILE

        echo "running tests"
        IntegrationServer --work-dir $TEST_SERVER \
          --test-project $(params.test-project-name) \
          --start-msgflows false 
