apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: read-secret
spec:
  params:
    - name: name
      description: the name of the secret to download
    - name: namespace
      description: the namespace that the secret is in
    - name: key
      description: which value from the secret to download


  workspaces:
    - name: output
      description: workspace to write the secret to


  results:
    - name: file
      description: location where the file where the secret contents is written to
    - name: value
      description: contents of the secret


  steps:
    - name: run
      image: image-registry.openshift-image-registry.svc:5000/openshift/tools
      script: |
        #!/bin/sh

        set -e

        echo "preparing folder to store secrets in"
        SECRETS_FOLDER="/workspace/output/downloaded-secrets"
        mkdir -p $SECRETS_FOLDER
        echo $SECRETS_FOLDER
        ls -l $SECRETS_FOLDER

        echo "preparing name to store secret value in"
        SECRET_FILE="$SECRETS_FOLDER/$(params.namespace)-$(params.name)-$(params.key)"

        echo "retrieving value from the secret"
        ESCAPED_KEY=$(echo $(params.key) | sed s/\\./'\\'./)
        oc get secret -n $(params.namespace) $(params.name) -o jsonpath="{.data.$ESCAPED_KEY}" | base64 -d > $SECRET_FILE
        ls -l $SECRETS_FOLDER

        echo "writing results"
        echo -n $SECRET_FILE  > $(results.file.path)

        if (( $(stat -c%s $SECRET_FILE) > 800 ))
        then
          echo "file contents too large to include in task results"
        else
          cat $SECRET_FILE > $(results.value.path)
        fi
